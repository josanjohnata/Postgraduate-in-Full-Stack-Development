Propriedades para texto

* Tamanho, cor, espaçamento e família
- Podem ser definidas características como:
  - Tamanho da fonte: font-size;
  - Cor da fonte: color;
  - Peso da fonte: font-weight;
  - Tipo da fonte: font-family;
  - Espaçamento entre linhas: line-height;
  - Espaçamento entre letra: letter-spacing;
  Exemplo:
    body {
      font-weight: 400;
      font-size: 15px;
      font-family: Lato, sans-serif;
      line-height: 1.8;
      color: #818181;
    }
  - Obs.: Font-family especifica a família da fonte e fam;ilia genérica, caso o navegador não possua.

* Propriedades para elementos em geral
- Background e margem
  - A propriedade Background é um atalho para definir os valores de fundo individuais em um único lugar na folha de estilo.
  - A propriedade margin do CSS define a érea de margem nos quatro lados do elemento.
  Exemplo:
    .attention {
      background: red;
    }
    .topBanner {
      background: url("https://mdn.mozillademos.org/files/11983/starsolid.gif") #800 repeat-y fixed;
    }
    .center {
      margin: auto;
      background: lime;
      width: 66%;
    }
    .outside {
      margin: 3rem 0 0 -3rem;
      background: cyan;
      width: 66%
    }

* Formatando listas para menu
- De lista suspensa a menu horizontal
  - home
  - Gallery
  - Event             ->  Home    Gallery   Event   Feedback    Contact
  - Feedback
  - Contact

* Estilizando tabelas com pseudo-classes
- Aplicando cor em linhas pares e ímpares
- Uma pseudo-classe é uma palavra-chave adicionada a seletores que especifica um estado especial do elemento selecionado, neste caso, linhas pares e linhas ímpares da tabela.
  Exemplo:
    table {
      width: 50%;
    }
    table td {
      color #303030;
      padding: 5px;
    }
    tr:nth-child(even) {
      background: #E9E9E9;
    }
    tr:nth-child(odd) {
      background: #BDBDBD;
    }
    thead th {
      background: F4511E !important;
      color: #FFFFFF !important;
    }

* Usando caixas(div) e atribuindo classes e Ids
- Div, class e id
  * <div>
    - É um elemento de divisão de conteúdo.
    - É um container genérico utilizado para agrupar elementos para fins de estilos (usando class ou id)
    - Ele deve ser utilizado somente quando não tiver outro elemento de semântica (tal como <article> ou <nav>).
  * Classes e ids permitem a CSS e Javascript selecionar e acessar elementos da página HTML.
    - Classes pode ser atribuídas a vários elementos
    - Ids só podem ser atribuídos a um elemento. Ele é o identificador do elemento.
    ** Nomenclatura: É considerada boa prática usar nomes que descrevam o propósito semântico do elemento. Ex. videos, formulario-contato.
